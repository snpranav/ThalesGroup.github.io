"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4162],{8835:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"choosing-a-key-manager","metadata":{"permalink":"/ciphertrust/blog/choosing-a-key-manager","editUrl":"https://github.com/snpranav/ThalesGroup.github.io/tree/main/ciphertrust/blog/2022-11-17-how-to-choose-a-key-manager-for-orgs.md","source":"@site/blog/2022-11-17-how-to-choose-a-key-manager-for-orgs.md","title":"A Guide to Picking the Right Key Manager for Your Org","description":"Your company has a ton of daily active users and you have this amazingly efficient architecture to process requests at scale, but your InfoSec team asks you to use a key manager \u2014 there are so many out there, which one do you choose?","date":"2022-11-17T00:00:00.000Z","formattedDate":"November 17, 2022","tags":[{"label":"data-encryption","permalink":"/ciphertrust/blog/tags/data-encryption"},{"label":"key-management","permalink":"/ciphertrust/blog/tags/key-management"}],"readingTime":3.565,"hasTruncateMarker":false,"authors":[{"name":"Pranav Shikarpur","title":"Developer Advocate @ Thales","url":"https://twitter.com/snpranav","imageURL":"https://pbs.twimg.com/profile_images/1587889480266047489/gAH1oUXT_400x400.jpg","key":"pranav"}],"frontMatter":{"slug":"choosing-a-key-manager","title":"A Guide to Picking the Right Key Manager for Your Org","authors":"pranav","tags":["data-encryption","key-management"]},"nextItem":{"title":"A Guide to Data Security Architectures","permalink":"/ciphertrust/blog/a-guide-to-encryption-architectures"}},"content":"Your company has a ton of daily active users and you have this amazingly efficient architecture to process requests at scale, but your InfoSec team asks you to use a key manager \u2014 there are so many out there, which one do you choose?\\n\\nThere are various different types of key managers, but in this post we\u2019ll cover three most common key managers:\\n\\n* Cloud Key Managers (Ex \u2014 AWS KMS, GCP KMS, Azure Key Vault, etc.)\\n\\n* External Key Managers (Ex \u2014 Thales CipherTrust Manager, Hashicorp Vault)\\n\\n## First, the literal  key to security \u2014 HSMs\\n\\nHSM stands for \u201c[Hardware Security Module](https://en.wikipedia.org/wiki/Hardware_security_module)\u201d. These are physical devices that are usually tamper resistant which store keys and perform encrypt, decrypt and other cryptographic operations.\\n\\nHSMs are needed in secure environments such as healthcare or financial institutions where you need to pass compliances such as PCI DSS.\\n\\n## Now Let\u2019s Compare\\n\\nLet\u2019s look at the pros and cons of each to help you decide what would work best for your organization.\\n\\n### Cloud Key Managers\\n\\n\u2705 **Easy Integration with Cloud Managed Services**\\n\\nWhen using cloud key managers like [AWS KMS (Key Management Service)](https://aws.amazon.com/kms/) it can be advantageous as you get the flexibility of AWS managing your keys as well as direct integration into your existing AWS managed services such as [AWS S3](https://aws.amazon.com/s3/), or [AWS RDS (Relational Database Service)](https://aws.amazon.com/rods/), etc.\\n\\n\u2705 **HSMs provisioned and managed by a cloud provider (most of the time \ud83e\udd1e)**\\n\\nMost famous cloud providers have HSMs that they use in their data centers which store your keys, so you don\u2019t have to worry about renting an HSM.\\n\\n**\u274c No Separation of Trust \ud83d\udd75\ufe0f\u200d\u2640\ufe0f**\\n\\nSince your cloud provider now hosts and controls your data and encryption keys. Your user data might not be as safe anymore as the cloud provider with malicious intent could easily decrypt your user data. This does not help in creating a **zero-trust architecture**. While it\u2019s true that your cloud provider has your best interest; there are always hackers lurking around the internet trying to get malicious access to your data, so it\u2019s best to store data in an isolated environment.\\n\\n### External Key Managers\\n\\n**\u2705 Complete Separation of Trust**\\n\\nWhen running a product such as CipherTrust Manager or Hashicorp Vault, your architectures are zero-trust by default as 2 different entities have access to either your data or your keys and **NOT both**.\\n\\n**\u274c Build your own custom integrations**\\n\\nUnless the key manager service has connectors, many-a-times, you would need to build your own connectors which could put a lot of engineering debt on your teams.\\n\\n\u26a0\ufe0f** Need to rent out your own HSM**\\n\\nYou\u2019d need to manage your own HSM, but fortunately, there are service providers that will rent out and manage the HSMs (just like a cloud provider) \u2014 so this is neither a pro nor a con. A great example of a hosted HSM is the [Luna HSM](https://cpl.thalesgroup.com/encryption/data-protection-on-demand/services/luna-cloud-hsm).\\n\\n## **Best of Both Worlds \ud83e\udd14**\\n\\nYes, it\u2019s possible! To implement the best data security practices, you would want the ease of integration with cloud-managed services as well as complete separation of trust to isolate encryption keys from data. This method is also called **BYOK **(bring your own key).\\n\\nYou can do this with products such as CipherTrust Manager [Cloud Key Manager](https://cpl.thalesgroup.com/encryption/key-management/ciphertrust-cloud-key-manager). This offers:\\n\\n**\u2705 Direct connection with cloud-managed KMS account**\\n\\nOnce you connect your AWS or GCP or Azure account to CipherTrust Manager as shown in the tutorial linked below, you will be able to manage keys directly from CipherTrust Manager and encrypt data on cloud-managed services.\\n\\n**\u2705 Key Lifecycle Management in a few clicks**\\n\\nIn just a few clicks you can setup key rotation which will rotate your keys every few months and provide the best data security standards for your organization.\\n\\n### How do I implement this?\\n\\nLuckily, it\u2019s easy to implement in 3 simple steps. Here\u2019s a tutorial I made that demos connecting CipherTrust Manager to my AWS KMS (Key Management Service) account and encrypt my AWS managed services such as S3 and RDS.\\n\\n\\nNow go ahead and encrypt all your cloud-managed services using this hybrid BYOK approach!\\n\\nIf you have any issues with implementation or questions about data encryption, feel free to leave a comment, tweet [@snpranav](https://twitter.com/snpranav), or raise a [GitHub issue](https://github.com/snpranav/data-encryption-in-transit-demo/issues/new) :)"},{"id":"a-guide-to-encryption-architectures","metadata":{"permalink":"/ciphertrust/blog/a-guide-to-encryption-architectures","editUrl":"https://github.com/snpranav/ThalesGroup.github.io/tree/main/ciphertrust/blog/2022-10-08-encryption-architectures.md","source":"@site/blog/2022-10-08-encryption-architectures.md","title":"A Guide to Data Security Architectures","description":"Building and deploying applications and services is super exciting. Still, when your security team prevents your application from going into production due to a lack of data encryption \u2014 this can be very annoying.","date":"2022-10-08T00:00:00.000Z","formattedDate":"October 8, 2022","tags":[{"label":"data-encryption","permalink":"/ciphertrust/blog/tags/data-encryption"},{"label":"data-protection-gateway","permalink":"/ciphertrust/blog/tags/data-protection-gateway"}],"readingTime":2.885,"hasTruncateMarker":false,"authors":[{"name":"Pranav Shikarpur","title":"Developer Advocate @ Thales","url":"https://twitter.com/snpranav","imageURL":"https://pbs.twimg.com/profile_images/1587889480266047489/gAH1oUXT_400x400.jpg","key":"pranav"}],"frontMatter":{"slug":"a-guide-to-encryption-architectures","title":"A Guide to Data Security Architectures","authors":"pranav","tags":["data-encryption","data-protection-gateway"]},"prevItem":{"title":"A Guide to Picking the Right Key Manager for Your Org","permalink":"/ciphertrust/blog/choosing-a-key-manager"}},"content":"Building and deploying applications and services is super exciting. Still, when your security team prevents your application from going into production due to a lack of data encryption \u2014 this can be very annoying.\\n\\nLet\u2019s take a look at the different data encryption methods that are most commonly used and how we can implement some of them.\\n\\nData encrypted at-rest vs in-transit?\\n=====================================\\n\\nWell, it\u2019s often hard to choose between encrypting a complete Postgres database or encrypting only specific fields of data in the database right before it gets written to a table.\\n\\nThe key difference between the two is that encrypting a database **after** data is written to it is called **data encryption at rest** and encrypting data **before** data is written to a database is called data encryption **in-transit**.\\n\\nThe illustration below should give you a good high-level understanding of the difference. Although data encryption at-rest was a standard encryption practice followed for many years, it involves developers writing and maintaining various different scripts or applications to ensure that the encryption is up to company standards. It is still useful while encrypting file systems and storage. On the other hand, data encryption in-transit is a lot more beneficial at times when you want to make your infrastructure database agnostic and provide high-security standards with significantly low developer effort.\\n\\n![Data Encryption at REST Architecture](https://miro.medium.com/max/720/1*7sOyc7n62Mxsq0cfKsLL0Q.png)\\n\\nNote that from the above diagram we can see that the method of encrypting data in-transit uses a **side-car container** which is a proxy used to intercept every request with sensitive fields or encrypted data and encrypt or decrypt the same respectively.\\n\\n![Data Encryption in-transit Architecture](https://miro.medium.com/max/720/1*9PC9Nv4j_L2LIoWsR4ZIeg.png)\\n\\nAdvantages of Data Encryption in-Transit\\n----------------------------------------\\n\\n**\u2705 No change to applications**\\n\\nThe beauty of doing data-encryption in transit is that you don\u2019t need to worry about changing any of your frontend apps, APIs, or databases. Since the side-car container does field-level encryption, you can granularly control all the data that needs to be encrypted and decrypted by remotely setting access policies from your key manager.\\n\\n**\u2705 Easy to deploy**\\n\\nDeploying a [Data Protection Gateway](https://cpl.thalesgroup.com/encryption/ciphertrust-data-protection-gateway) side-car container is as easy to deploy as logging agents such as DataDog or Prometheus. You can just update your docker-compose, Kubernetes config files or just use Helm to install it.\\n\\n**\u2705 Developers can stop implementing data security policies**\\n\\nNow you can shift the responsibility of setting and implementing data security policies from developers over to InfoSec teams. This significantly helps prevent data breaches or unauthorized data access.\\n\\nDisadvantages of Data Encryption in-Transit\\n-------------------------------------------\\n\\n\u274c **Data encryption is only as strong as policies set**\\n\\nThis applies to any method of data encryption. However, when we perform field-level encryption and decryption, InfoSec teams need to be aware of all data flowing through various API routes to prevent data breaches and unauthorized access to unencrypted data.\\n\\n---\\n\\nHow Do I Implement Data Encryption in-Transit?\\n----------------------------------------------\\n\\nYou\u2019re in luck \ud83d\ude4c because I have a tutorial showing you how to easily implement data encryption in-transit with any of your containerized applications.\\n\\nIn this tutorial, I have used [CipherTrust Manager](https://ciphertrust.io/)\u2019s Data Protection Gateway product which is extremely easy to set up and free to start using\ud83d\udc47\\n\\nimport YoutubeEmbed from \'@site/src/components/YoutubeEmbed\';\\n\\n<YoutubeEmbed embedId=\\"EJun5McPRGY\\" github=\\"https://github.com/snpranav/data-encryption-in-transit-demo\\" demourl=\\"https://main-yak.sneakpeak.dev/\\" />\\n\\n---\\n\\nNow go ahead and encrypt data in-transit from all your applications using side-car containers.\\n\\nIf you have any issues with implementation or questions about data encryption in-transit, feel free to leave a comment, tweet [@snpranav](https://twitter.com/snpranav), or raise a [GitHub issue](https://github.com/snpranav/data-encryption-in-transit-demo/issues/new) :)"}]}')}}]);